function carFleet(target: number, position: number[], speed: number[]): number {
  let pairs: number[][] = [];
  for (let i = 0; i < position.length; i++) {
    let [pos, spd] = [position[i], speed[i]];
    pairs.push([pos, spd]);
  }
  let sortedPairs = pairs.sort((a, b) => b[0] - a[0]);
  let stack: number[] = [];
  for (let i = 0; i < pairs.length; i++) {
    let time = (target - sortedPairs[i][0]) / sortedPairs[i][1];
    stack.push(time);
    if (stack.length >= 2) {
      if (stack[stack.length - 1] <= stack[stack.length - 2]) {
        stack.pop();
      }
    }
  }
  return stack.length
}
let target = 12,
  position = [10, 8, 0, 5, 3],
  speed = [2, 4, 1, 1, 3];

console.log(carFleet(target, position, speed));


// Runtime
// Details
// 206ms
// Beats 65.43%of users with TypeScript
// Memory
// Details
// 75.48MB
// Beats 79.01%of users with TypeScript